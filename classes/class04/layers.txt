workers -> processo em segundo plano
  -> toda lógica PESADA (que envolva CPU)
  -> tudo que pode travar a tela (for loop, machine learnign, AI, processamento de Web CAM)
  -> ele chama as regras de negócio da service
services ->
  -> toda lógica de negócio
  -> toda chamada externa (API, arquivos, banco de dados)
views ->
  -> toda iteração com o DOM (com o HTML, com a página)
controllers ->
  -> intermediário entre (services e/ou workers) e views
factories ->
  -> quem importa as dependências
  -> e cria o objeto final para fazer as chamadas
  -> retornar a função que inicializa o fluxo daquele componente (init)
index.js -> é responsável por chamar todas as camadas